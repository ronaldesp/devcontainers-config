{
  "name": "Polyglot Cloud POCs",
  "build": {
    "context": "..",
    "dockerfile": "../Dockerfile"
  },
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "source=devcontainer-vscode-extensions,target=/home/vscode/.vscode-server/extensions,type=volume",
    "source=devcontainer-vscode-extensions-insiders,target=/home/vscode/.vscode-server-insiders/extensions,type=volume"
  ],
  "remoteUser": "vscode",
  "forwardPorts": [10000, 10001, 10002],
  "containerEnv": {
    "AZURITE_ACCOUNTS": "devstoreaccount1:Eby8vdM02xNOcqFeqCnf2U==",
    "AZURE_STORAGE_CONNECTION_STRING": "UseDevelopmentStorage=true",
    "AzureWebJobsStorage": "UseDevelopmentStorage=true"
  },
  "customizations": {
    "vscode": {
      "settings": {
        "files.eol": "\n",
        "editor.wordWrap": "on",
        "remote.extensionKind": {
          "ms-azuretools.vscode-docker": ["workspace"],
          "ms-azuretools.vscode-azurefunctions": ["workspace"],
          "ms-vscode.azurecli": ["workspace"],
          "ms-python.python": ["workspace"],
          "ms-python.vscode-pylance": ["workspace"],
          "ms-dotnettools.csharp": ["workspace"],
          "ms-dotnettools.csdevkit": ["workspace"],
          "ms-vscode.vscode-azureextensionpack": ["workspace"]
        },
        "extensions.autoCheckUpdates": true,
        "extensions.autoUpdate": true
      },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-dotnettools.csharp",
        "ms-vscode.powershell",
        "HashiCorp.terraform",
        "ms-azuretools.vscode-docker",
        "ms-azuretools.vscode-azurefunctions",
        "ms-vscode.azurecli",
        "amazonwebservices.aws-toolkit-vscode",
        "GoogleCloudTools.cloudcode",
        "redhat.vscode-yaml",
        "tamasfe.even-better-toml",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-dotnettools.csdevkit"
        ,"ms-vscode.vscode-azureextensionpack"
      ]
    }
  },
  "postStartCommand": "bash -lc 'if pgrep -f \\bazurite\\b >/dev/null; then echo Azurite already running; else mkdir -p /workspaces/.azurite && nohup azurite --silent --location /workspaces/.azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 >/workspaces/.azurite/azurite.log 2>&1 & fi; for i in {1..30}; do if curl -sSf http://127.0.0.1:10000/devstoreaccount1 >/dev/null; then echo Azurite ready; break; else echo waiting for Azurite...; sleep 1; fi; done'"
}
